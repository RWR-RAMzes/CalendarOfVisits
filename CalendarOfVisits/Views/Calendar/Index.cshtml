@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    var userId = User.Identity.Name;
    var role = ViewBag.Role as string;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width"/>
    <link href="https://cdn.dhtmlx.com/scheduler/edge/dhtmlxscheduler.css"
          rel="stylesheet" type="text/css"/>
    <script src="https://cdn.dhtmlx.com/scheduler/edge/dhtmlxscheduler.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            scheduler.config.details_on_dblclick = true;
            const ratingOptions = [
                  { key: 0, label: '' },
                  { key: 1, label: '1' },
                  { key: 2, label: '2' },
                  { key: 3, label: '3' },
                  { key: 4, label: '4' },
                  { key: 5, label: '5' },
                  { key: 6, label: '6' },
                  { key: 7, label: '7' },
                  { key: 8, label: '8' },
                  { key: 9, label: '9' },
                  { key: 10, label: '10' }
              ];
            if ('@role'=== "Manager") {
                scheduler.config.icons_select=['icon_details'];
                scheduler.config.dblclick_create = false;
                scheduler.config.buttons_right=[];
                
                scheduler.config.lightbox.sections=[
                    {name:"Created by", height:200, map_to:"created_by", type:"textarea"},
                    {name:"Client name", height:200, map_to:"text", type:"textarea" , focus:true},
                    {name:"Purpose of the visit", height:200, map_to:"purpose", type:"textarea"},
                    {name:"time", height:72, type:"time", map_to:"auto"},
                    {name:"Rating", height:40, map_to:"rating", type:"select", options:ratingOptions}
                ];
                
                  scheduler.attachEvent("onLightbox", function(){
                       const sections = [scheduler.formSection("Client name"), scheduler.formSection("Purpose of the visit"), scheduler.formSection("Created by")];
                       sections.forEach((s) => s.control.disabled = true);
                       
                        const time = scheduler.formSection("time");
                        const controls = time.node.querySelectorAll("select");
                        controls.forEach((c) => c.disabled = true);
                    });              
            } else if ('@role'=== "Sales Representative") {
                scheduler.config.lightbox.sections=[
                    {name:"Client name", height:200, map_to:"text", type:"textarea" , focus:true},
                    {name:"Purpose of the visit", height:200, map_to:"purpose", type:"textarea"},
                    {name:"time", height:72, type:"time", map_to:"auto"},
                    {name:"Rating", height:40, map_to:"rating", type:"select", options:ratingOptions}
                ];
                
                scheduler.attachEvent("onLightbox", function(){
                    const section = scheduler.formSection("Rating");
                    const controls = section.node.querySelectorAll("select");
                    controls.forEach((c) => c.disabled = true);
                });
            }
            
            scheduler.init("scheduler_here", new Date());
            
              
            scheduler.attachEvent("onEventSave", function(id,ev){
                if (!ev.text) {
                    Swal.fire({
                      icon: "error",
                      text: "Name of the client field cannot be empty!"
                    });
                    return false;
                }
                if (!ev.purpose || ev.purpose.length < 20) {
                    Swal.fire({
                      icon: "error",
                      text: "Purpose of the visit field must contain at least 20 characters!"
                    });
                    return false;
                }
                
                return true;
            });
            
            scheduler.setLoadMode("day");
            scheduler.load("/api/scheduler");
            const dp = scheduler.createDataProcessor({
                url: "/api/scheduler",
                mode: "REST"
            });
        });
    </script>
</head>
<body>
<div id="scheduler_here" class="dhx_cal_container" style='
    width:100%; height:100vh;'>
    <div class="dhx_cal_navline">
        <div class="dhx_cal_prev_button">&nbsp;</div>
        <div class="dhx_cal_next_button">&nbsp;</div>
        <div class="dhx_cal_today_button"></div>
        <div class="dhx_cal_date"></div>
        <div class="dhx_cal_tab" name="day_tab"></div>
        <div class="dhx_cal_tab" name="week_tab"></div>
        <div class="dhx_cal_tab" name="month_tab"></div>
    </div>
    <div class="dhx_cal_header"></div>
    <div class="dhx_cal_data"></div>
</div>
</body>
</html>